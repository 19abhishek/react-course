{"ast":null,"code":"var _jsxFileName = \"/Users/abhishek_0819/Documents/Development/React-complete-guide/Behind-The-Scenes-React/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from \"react\";\nimport \"./App.css\";\nimport DemoOutput from \"./components/Demo/DemoOutput\";\nimport Button from \"./components/UI/Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [paragraphState, setParagraphState] = useState(false);\n  const [allowToggle, setAllowToggle] = useState(false);\n  console.log(\"App running\");\n  const clickHandler = useCallback(() => {\n    if (allowToggle) setParagraphState(currState => !currState);\n  }, []);\n\n  const allowToggleHandler = () => {\n    setAllowToggle(currToggle => !currToggle);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hi there!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DemoOutput, {\n      show: paragraphState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: allowToggleHandler,\n      children: \"Allow Toggle!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: clickHandler,\n      children: \"Toggle Paragraph!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"HXUA5ejBf2JlI34cdkvFQdi1Ifc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/abhishek_0819/Documents/Development/React-complete-guide/Behind-The-Scenes-React/src/App.js"],"names":["React","useState","useCallback","DemoOutput","Button","App","paragraphState","setParagraphState","allowToggle","setAllowToggle","console","log","clickHandler","currState","allowToggleHandler","currToggle"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AAEA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCN,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,KAAD,CAA9C;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AAEA,QAAMC,YAAY,GAAGV,WAAW,CAAC,MAAM;AACrC,QAAIM,WAAJ,EAAiBD,iBAAiB,CAAEM,SAAD,IAAe,CAACA,SAAjB,CAAjB;AAClB,GAF+B,EAE7B,EAF6B,CAAhC;;AAIA,QAAMC,kBAAkB,GAAG,MAAM;AAC/BL,IAAAA,cAAc,CAAEM,UAAD,IAAgB,CAACA,UAAlB,CAAd;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AAAY,MAAA,IAAI,EAAET;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEQ,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEF,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GArBQP,G;;KAAAA,G;AAuBT,eAAeA,GAAf","sourcesContent":["import React, { useState, useCallback } from \"react\";\n\nimport \"./App.css\";\nimport DemoOutput from \"./components/Demo/DemoOutput\";\nimport Button from \"./components/UI/Button/Button\";\n\nfunction App() {\n  const [paragraphState, setParagraphState] = useState(false);\n  const [allowToggle, setAllowToggle] = useState(false);\n  console.log(\"App running\");\n\n  const clickHandler = useCallback(() => {\n    if (allowToggle) setParagraphState((currState) => !currState);\n  }, []);\n\n  const allowToggleHandler = () => {\n    setAllowToggle((currToggle) => !currToggle);\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>Hi there!</h1>\n      <DemoOutput show={paragraphState} />\n      <Button onClick={allowToggleHandler}>Allow Toggle!</Button>\n      <Button onClick={clickHandler}>Toggle Paragraph!</Button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}