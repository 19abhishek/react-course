{"ast":null,"code":"var _jsxFileName = \"/Users/abhishek_0819/Documents/Development/React-complete-guide/Behind-The-Scenes-React/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from \"react\";\nimport \"./App.css\";\nimport DemoList from \"./components/Demo/DemoList\";\nimport DemoOutput from \"./components/Demo/DemoOutput\";\nimport Button from \"./components/UI/Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [paragraphState, setParagraphState] = useState(false);\n  const [allowToggle, setAllowToggle] = useState(false);\n  console.log(\"App running\");\n  const clickHandler = useCallback(() => {\n    if (allowToggle) {\n      setParagraphState(currState => !currState);\n    }\n  }, [allowToggle]);\n\n  const allowToggleHandler = () => {\n    setAllowToggle(currToggle => !currToggle);\n  };\n\n  const [listTitle, setListTitle] = useState(\"My List\");\n  const changeTitleHandler = useCallback(() => {\n    setListTitle(\"New Title\");\n  }, []);\n  const listItems = useMemo(() => [5, 3, 1, 10, 9], []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hi there!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DemoList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      children: \"Click!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"2CPfp2LDY+Ikp54Yp4G0WSQdO4o=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/abhishek_0819/Documents/Development/React-complete-guide/Behind-The-Scenes-React/src/App.js"],"names":["React","useState","useCallback","DemoList","DemoOutput","Button","App","paragraphState","setParagraphState","allowToggle","setAllowToggle","console","log","clickHandler","currState","allowToggleHandler","currToggle","listTitle","setListTitle","changeTitleHandler","listItems","useMemo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AAEA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,KAAD,CAA9C;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AAEA,QAAMC,YAAY,GAAGX,WAAW,CAAC,MAAM;AACrC,QAAIO,WAAJ,EAAiB;AACfD,MAAAA,iBAAiB,CAAEM,SAAD,IAAe,CAACA,SAAjB,CAAjB;AACD;AACF,GAJ+B,EAI7B,CAACL,WAAD,CAJ6B,CAAhC;;AAMA,QAAMM,kBAAkB,GAAG,MAAM;AAC/BL,IAAAA,cAAc,CAAEM,UAAD,IAAgB,CAACA,UAAlB,CAAd;AACD,GAFD;;AAIA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,SAAD,CAA1C;AAEA,QAAMkB,kBAAkB,GAAGjB,WAAW,CAAC,MAAM;AAC3CgB,IAAAA,YAAY,CAAC,WAAD,CAAZ;AACD,GAFqC,EAEnC,EAFmC,CAAtC;AAIA,QAAME,SAAS,GAAGC,OAAO,CAAC,MAAM,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,EAAV,EAAc,CAAd,CAAP,EAAyB,EAAzB,CAAzB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAjCQf,G;;KAAAA,G;AAmCT,eAAeA,GAAf","sourcesContent":["import React, { useState, useCallback } from \"react\";\n\nimport \"./App.css\";\nimport DemoList from \"./components/Demo/DemoList\";\nimport DemoOutput from \"./components/Demo/DemoOutput\";\nimport Button from \"./components/UI/Button/Button\";\n\nfunction App() {\n  const [paragraphState, setParagraphState] = useState(false);\n  const [allowToggle, setAllowToggle] = useState(false);\n  console.log(\"App running\");\n\n  const clickHandler = useCallback(() => {\n    if (allowToggle) {\n      setParagraphState((currState) => !currState);\n    }\n  }, [allowToggle]);\n\n  const allowToggleHandler = () => {\n    setAllowToggle((currToggle) => !currToggle);\n  };\n\n  const [listTitle, setListTitle] = useState(\"My List\");\n\n  const changeTitleHandler = useCallback(() => {\n    setListTitle(\"New Title\");\n  }, []);\n\n  const listItems = useMemo(() => [5, 3, 1, 10, 9], []);\n\n  return (\n    <div className=\"app\">\n      <h1>Hi there!</h1>\n      <DemoList />\n      <Button>Click!</Button>\n      {/* <DemoOutput show={paragraphState} />\n      <Button onClick={allowToggleHandler}>Allow Toggle!</Button>\n      <Button onClick={clickHandler}>Toggle Paragraph!</Button> */}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}