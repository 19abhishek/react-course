{"ast":null,"code":"var _jsxFileName = \"/Users/abhishek_0819/Documents/Development/React-complete-guide/Authentication/src/components/Auth/AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from \"react\";\nimport classes from \"./AuthForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n    console.log(enteredPassword);\n    setLoading(true);\n    let url;\n\n    if (isLogin) {\n      url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDjMITcryuUpecny4vHV9jgzmlqZbrsPIc\";\n    } else {\n      const send = async () => {\n        // console.log(\"hello\");\n        url = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDjMITcryuUpecny4vHV9jgzmlqZbrsPIc\";\n        const response = await fetch(url, {\n          method: \"POST\",\n          body: JSON.stringify({\n            email: enteredEmail,\n            password: enteredPassword,\n            returnSecureToken: true\n          }),\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        setLoading(false);\n\n        if (!response.ok) {//\n        }\n\n        const data = await response.json();\n        let errorMessage = \"Authentication Failed!!\";\n\n        if (data && data.error && data.error.message) {\n          errorMessage = data.error.message;\n        }\n\n        console.log(data);\n        alert(errorMessage);\n      };\n\n      send();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? \"Login\" : \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: emailInputRef,\n          type: \"email\",\n          id: \"email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: passwordInputRef,\n          type: \"password\",\n          id: \"password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? \"Login\" : \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"white\"\n          },\n          children: \"Sending Request...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? \"Create new account\" : \"Login with existing account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"ZOLL5g+fXni9b1XH4mRn9WVfzq4=\");\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["/Users/abhishek_0819/Documents/Development/React-complete-guide/Authentication/src/components/Auth/AuthForm.js"],"names":["useState","useRef","classes","AuthForm","emailInputRef","passwordInputRef","isLogin","setIsLogin","isLoading","setLoading","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","console","log","url","send","response","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","ok","data","json","errorMessage","error","message","alert","auth","control","actions","color","toggle"],"mappings":"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","sourcesContent":["import { useState, useRef } from \"react\";\n\nimport classes from \"./AuthForm.module.css\";\n\nconst AuthForm = () => {\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n    console.log(enteredPassword);\n\n    setLoading(true);\n    let url;\n    if (isLogin) {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDjMITcryuUpecny4vHV9jgzmlqZbrsPIc\";\n    } else {\n      const send = async () => {\n        // console.log(\"hello\");\n        url =\n          \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDjMITcryuUpecny4vHV9jgzmlqZbrsPIc\";\n        const response = await fetch(url, {\n          method: \"POST\",\n          body: JSON.stringify({\n            email: enteredEmail,\n            password: enteredPassword,\n            returnSecureToken: true,\n          }),\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        });\n        setLoading(false);\n        if (!response.ok) {\n          //\n        }\n        const data = await response.json();\n        let errorMessage = \"Authentication Failed!!\";\n        if (data && data.error && data.error.message) {\n          errorMessage = data.error.message;\n        }\n        console.log(data);\n        alert(errorMessage);\n      };\n      send();\n    }\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input ref={emailInputRef} type=\"email\" id=\"email\" required />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input\n            ref={passwordInputRef}\n            type=\"password\"\n            id=\"password\"\n            required\n          />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && (\n            <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\n          )}\n          {isLoading && <p style={{ color: \"white\" }}>Sending Request...</p>}\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}